{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["notes","triggerKey","keyCode","name","url","notes1","mode1Color","mode2Color","offColor","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","event","console","log","target","value","playSound","handleKeyPress","key","state","currentNotes","find","obj","power","undefined","JSON","stringify","document","getElementById","style","opacity","handleKeyUp","note","setState","displayName","sound","Audio","volume","currentTime","play","powerToggle","color","setColorPower","mode","changeVolume","currentColor","addEventListener","removeEventListener","react_default","a","createElement","className","id","borderColor","App_PadContainer","onClick","App_ControlsContainer","Component","PadContainer","_this2","map","i","DrumPad","src","type","ControlsContainer","backgroundColor","min","max","step","onChange","borderLeftColor","borderRightColor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a835320c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nconst notes = [{\r\n    triggerKey: 'Q',\r\n    keyCode: 81,\r\n    name: 'heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n  },{\r\n    triggerKey: 'W',\r\n    keyCode: 87,\r\n    name: 'heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n  },{\r\n    triggerKey: 'E',\r\n    keyCode: 69,\r\n    name: 'heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n  },{\r\n    triggerKey: 'A',\r\n    keyCode: 65,\r\n    name: 'heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n  },{\r\n    triggerKey: 'S',\r\n    keyCode: 83,\r\n    name: 'heater-6',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n  },{\r\n    triggerKey: 'D',\r\n    keyCode: 68,\r\n    name: 'punchy-kick-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n  },{\r\n    triggerKey: 'Z',\r\n    keyCode: 90,\r\n    name: 'kick-n-hat',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n  },{\r\n    triggerKey: 'X',\r\n    keyCode: 88,\r\n    name: 'kick-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n  },{\r\n    triggerKey: 'C',\r\n    keyCode: 67,\r\n    name: 'h1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n  }];\r\n\r\nconst notes1 = [{\r\n    triggerKey: 'Q',\r\n    keyCode: 81,\r\n    name: 'dsc_Oh',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n  },{\r\n    triggerKey: 'W',\r\n    keyCode: 87,\r\n    name: 'side_stick_1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n  },{\r\n    triggerKey: 'E',\r\n    keyCode: 69,\r\n    name: 'cev_h2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n  },{\r\n    triggerKey: 'A',\r\n    keyCode: 65,\r\n    name: 'chord_1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n  },{\r\n    triggerKey: 'S',\r\n    keyCode: 83,\r\n    name: 'chord_2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n  },{\r\n    triggerKey: 'D',\r\n    keyCode: 68,\r\n    name: 'chord_3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n  },{\r\n    triggerKey: 'Z',\r\n    keyCode: 90,\r\n    name: 'give_us_a_light',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n  },{\r\n    triggerKey: 'X',\r\n    keyCode: 88,\r\n    name: 'dry_ohh',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n  },{\r\n    triggerKey: 'C',\r\n    keyCode: 67,\r\n    name: 'brk_snr',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n  }];\r\n\r\nconst mode1Color = '#b3ff51';\r\nconst mode2Color = '#ff6800';\r\nconst offColor = '#ccc';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayName: '',\r\n      power: true,\r\n      mode: true,\r\n      volume: .5,\r\n      color: mode1Color,\r\n      currentNotes: notes\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyPress);\r\n    document.addEventListener('keyup', this.handleKeyUp);\r\n    console.log(this.state.power);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyPress);\r\n    document.removeEventListener('keyup', this.handleKeyUp);\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    console.log(event.target.value);\r\n    this.playSound(event.target.value);\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    this.playSound(event.keyCode);\r\n    const key = this.state.currentNotes.find(obj => obj.keyCode == event.keyCode);\r\n    if(this.state.power && key !== undefined) {\r\n      console.log('key: ' + JSON.stringify(key, null, 2));\r\n      document.getElementById(key.name).style.opacity = .7;\r\n    }\r\n  }\r\n\r\n  handleKeyUp = (event) => {\r\n    const key = this.state.currentNotes.find(obj => obj.keyCode == event.keyCode);\r\n    if(this.state.power && key !== undefined) {\r\n      console.log('key: ' + JSON.stringify(key, null, 2));\r\n      document.getElementById(key.name).style.opacity = 1;\r\n    }\r\n  }\r\n\r\n  playSound = (key) => {\r\n    console.log(key);\r\n    const note = this.state.currentNotes.find(obj => obj.keyCode == key);\r\n    if(this.state.power && note !== undefined) {\r\n      console.log(note);\r\n      this.setState({\r\n        displayName: note.name\r\n      });\r\n      const sound = new Audio(note.url);\r\n      sound.volume = this.state.volume;\r\n      sound.currentTime = 0;\r\n      sound.play();\r\n    }\r\n  }\r\n\r\n  powerToggle = (event) => {\r\n    if(event.target.value === 'power'){\r\n      const powerState = this.state.power;\r\n      const currColor = this.state.color\r\n      this.setState({\r\n        power: !this.state.power,\r\n        displayName: '',\r\n        color: this.setColorPower(this.state.power, this.state.color, this.state.mode)\r\n      });\r\n    } else {\r\n      if(this.state.power) {\r\n        this.setState({\r\n          mode: !this.state.mode,\r\n          displayName: '',\r\n          color: !this.state.mode ? mode1Color : mode2Color,\r\n          currentNotes: !this.state.mode ? notes : notes1\r\n        });    \r\n      } else {\r\n        this.setState({\r\n          mode: !this.state.mode,\r\n          displayName: '',\r\n          currentNotes: !this.state.mode ? notes : notes1\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  changeVolume = (event) => {\r\n    this.setState({\r\n      volume: event.target.value\r\n    });\r\n  }\r\n\r\n  setColorPower = (power, currentColor, mode) => {\r\n    if(!power && mode) {return mode1Color;}\r\n    else if(!power && !mode) {return mode2Color;}\r\n    else if(power){return offColor;}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\" id=\"drum-machine\"\r\n        style={{borderColor: this.state.color, color: this.state.color}}>\r\n        <PadContainer \r\n          className=\"pad-container\"\r\n          onClick={this.handleClick}\r\n          color={this.state.color}\r\n          notes={this.state.currentNotes}/>\r\n        <ControlsContainer \r\n          name={this.state.displayName}\r\n          onClick={this.powerToggle}\r\n          changeVolume={this.changeVolume}\r\n          volume={this.state.volume}\r\n          color={this.state.color}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PadContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pad-container\">\r\n        {this.props.notes.map((note, i) => {\r\n            return(\r\n              <DrumPad\r\n                id={note.name}\r\n                url={note.url}\r\n                value={note.triggerKey}\r\n                keyCode={note.keyCode}\r\n                onClick={this.props.onClick}\r\n                color={this.props.color}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction DrumPad(props) {\r\n\r\n  return (\r\n    <button className=\"drum-pad\" id={props.id} onClick={props.onClick} value={props.keyCode}\r\n      style={{borderColor: props.color, color: props.color}}>\r\n      {props.value}\r\n      <audio src={props.url} type=\"audio/mpeg\"></audio>\r\n    </button>\r\n  );\r\n}\r\n\r\nclass ControlsContainer extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"controls-container\">\r\n        <div className=\"control\" id=\"display\"\r\n          style={{borderColor: this.props.color}}>{this.props.name}</div>\r\n        <div className=\"control\" id=\"power\">\r\n          <div>on</div>\r\n          <label className=\"switch\">\r\n            <input type=\"checkbox\" onClick={this.props.onClick} value={'power'}/>\r\n            <span className=\"slider round\" \r\n              style={{backgroundColor: this.props.color}}></span>\r\n          </label>\r\n          <div>off</div>\r\n        </div>\r\n        <div className=\"control\" id=\"volume\">\r\n          <div>vol</div>\r\n          <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" className=\"volumeSlider\" id=\"myRange\"\r\n            value={this.props.volume}\r\n            onChange={this.props.changeVolume}\r\n            style={{backgroundColor: this.props.color,\r\n                    borderLeftColor: this.props.color,\r\n                    borderRightColor: this.props.color}}/>\r\n        </div>\r\n        <div className=\"control\" id=\"mode\">\r\n          <div>mode1</div>\r\n          <label className=\"switch\">\r\n            <input type=\"checkbox\" onClick={this.props.onClick} value={'mode'}/>\r\n            <span className=\"slider round\"\r\n            style={{backgroundColor: this.props.color}}></span>\r\n          </label>\r\n          <div>mode2</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}